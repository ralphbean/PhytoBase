from sqlalchemy import *
from sqlalchemy.orm import mapper, relation, backref, relationship
from sqlalchemy.types import Integer, Unicode, Boolean

from phytobase.model import DeclarativeBase, metadata, DBSession


__all__ = ['Experiment' ]

class Experiment(DeclarativeBase):

    __tablename__ = 'experiment'

    id = Column(Integer, autoincrement=True,primary_key=True)
    code = Column(Unicode,nullable=False,unique=True)
    type_id = Column(Integer,ForeignKey('experiments_type.id'),nullable=True)
    type = relation('Experiments_type',foreign_keys=type_id)

    title = Column(Unicode, nullable=True)
    description = Column(Unicode, nullable=True)
    add_date = Column(DateTime,nullable=True)
    comment = Column(Unicode, nullable=True)

    owner = relationship('User', secondary=experiment_to_owner, backref="owner")
    producer = relationship('User', secondary=experiment_to_producer, backref="producer")
    childs = relationship("Fraction")

    def __repr__(self):
        return (u"<Experiment('%s')>" % (
            self.code
        )).encode('utf-8')
    def __unicode__(self):
        return(self.code)
